@model FrontKFHShortcuts.Models.Dashboard.DashboardRequest

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Requests</h5>
                    <p class="card-text">@Model.TotalRequests</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Requests per Month</h5>
                    <canvas id="requestPerMonthChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Top Products Chart</h5>
                    <canvas id="topProductsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Top Products</h5>
                    <div class="list-group">
                        @foreach (var product in Model.TopProducts)
                        {
                            <a href="@Url.Action("ProductDetails", "Products", new { productName = product.ProductName })" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">@product.ProductName</h5>
                                    <small>@product.Requests Requests</small>
                                </div>
                                <img src="@product.Image" alt="@product.ProductName" style="width:120px;height:60px;" />
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Least Products</h5>
                    <div class="list-group">
                        @foreach (var product in Model.LeastProducts)
                        {
                            <a href="@Url.Action("Details", "Product", new { productName = product.ProductName })" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">@product.ProductName</h5>
                                    <small>@product.Requests Requests</small>
                                </div>
                                <img src="@product.Image" alt="@product.ProductName" style="width:120px;height:60px;" />
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Data for Requests per Month chart
        var requestPerMonthCtx = document.getElementById('requestPerMonthChart').getContext('2d');
        var requestPerMonthChart = new Chart(requestPerMonthCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.MonthlyRequests.Select(r => r.Month))),
                datasets: [{
                    label: 'Requests',
                    data: @Html.Raw(Json.Serialize(Model.MonthlyRequests.Select(r => r.Requests))),
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            }
        });

        // Data for Top Products chart
        var topProductsCtx = document.getElementById('topProductsChart').getContext('2d');
        var topProductsChart = new Chart(topProductsCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TopProducts.Select(p => p.ProductName))),
                datasets: [{
                    label: 'Requests',
                    data: @Html.Raw(Json.Serialize(Model.TopProducts.Select(p => p.Requests))),
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            }
        });
    </script>
}
