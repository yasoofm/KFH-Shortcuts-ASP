// <auto-generated />
using System;
using BackKFHShortcuts.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackKFHShortcuts.Migrations
{
    [DbContext(typeof(ShortcutsContext))]
    [Migration("20240606101000_system-messages-migration")]
    partial class systemmessagesmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AwardedPoints")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sharia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAudience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.ProductRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductRequests");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RequiredPoints")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.RewardRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ClaimedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RewardId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RewardId");

                    b.HasIndex("UserId");

                    b.ToTable("RewardRequests");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.SystemMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemMessage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "If asked about Prepaid Cards reply with Oasis Club Mastercard World, Hesabi, Al-Osra, and Foreign Currency",
                            Role = "system"
                        },
                        new
                        {
                            Id = 2,
                            Content = "If asked about Financial Investments reply with Al Nuwair, Al Sidra, Al Dima, and Al Khomasiyah",
                            Role = "system"
                        },
                        new
                        {
                            Id = 3,
                            Content = "If asked about Accounts reply with Alrabeh and Investment saving account",
                            Role = "system"
                        },
                        new
                        {
                            Id = 4,
                            Content = "If asked about Credit Cards reply with Oasis Club Mastercard World and Visa Diamond",
                            Role = "system"
                        },
                        new
                        {
                            Id = 5,
                            Content = "You are a chatbot used to help KFH Employees promote and sell KFH products",
                            Role = "system"
                        },
                        new
                        {
                            Id = 6,
                            Content = "make your replies as short and concise as possible while giving the asked for information in a clear way",
                            Role = "system"
                        });
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("KFH_Id")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            FirstName = "Yousef",
                            IsAdmin = true,
                            KFH_Id = 1111,
                            LastName = "Mandani",
                            Password = "$2a$11$PAT5cVIRTHA1PIYpSvKVUuBBG.X9jdPNSdQGJ6VJfuO.BJvjnq6ia",
                            Points = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@mail.com",
                            FirstName = "Yousef",
                            IsAdmin = false,
                            KFH_Id = 1234,
                            LastName = "Mandani",
                            Password = "$2a$11$jobxxfPBoZeNh7dzVOqRM.v.INCPEi/V.jZM/82xFxHQUZSU/zn3q",
                            Points = 0
                        });
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Message", b =>
                {
                    b.HasOne("BackKFHShortcuts.Models.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Product", b =>
                {
                    b.HasOne("BackKFHShortcuts.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.ProductRequest", b =>
                {
                    b.HasOne("BackKFHShortcuts.Models.Entities.Product", "Product")
                        .WithMany("ProductRequests")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackKFHShortcuts.Models.Entities.User", "User")
                        .WithMany("ProductRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.RewardRequest", b =>
                {
                    b.HasOne("BackKFHShortcuts.Models.Entities.Reward", "Reward")
                        .WithMany("Requests")
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackKFHShortcuts.Models.Entities.User", "User")
                        .WithMany("Rewards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reward");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Product", b =>
                {
                    b.Navigation("ProductRequests");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.Reward", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("BackKFHShortcuts.Models.Entities.User", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("ProductRequests");

                    b.Navigation("Rewards");
                });
#pragma warning restore 612, 618
        }
    }
}
